// Created by Microsoft (R) C/C++ Compiler Version 15.00.21022.08 (213a37cb).
//
// c:\users\ecog record\documents\jesse's documents\decoding\nervetask\release\tdevaccx.tlh
//
// C++ source equivalent of Win32 type library C:\\TDT\\OpenEx\\OCX\\TDevAccX.ocx
// compiler-generated file created 05/03/11 at 10:43:39 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace TDEVACCXLib {

//
// Forward references and typedefs
//

struct __declspec(uuid("735ff2f5-cc9a-4d67-bfc1-fd5fa6742027"))
/* LIBID */ __TDEVACCXLib;
struct __declspec(uuid("f04fc131-d33b-45b7-bc22-cf58b06ca5cb"))
/* dispinterface */ _DTDevAccX;
struct __declspec(uuid("64e8c018-79f7-4c72-9244-6cae7315ba4f"))
/* dispinterface */ _DTDevAccXEvents;
struct /* coclass */ TDevAccX;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_DTDevAccX, __uuidof(_DTDevAccX));
_COM_SMARTPTR_TYPEDEF(_DTDevAccXEvents, __uuidof(_DTDevAccXEvents));

//
// Type library items
//

struct __declspec(uuid("f04fc131-d33b-45b7-bc22-cf58b06ca5cb"))
_DTDevAccX : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    long ConnectServer (
        _bstr_t ServerName );
    long CheckServerConnection ( );
    HRESULT CloseConnection ( );
    long WriteTarget (
        _bstr_t Target,
        long nOS,
        long nWords,
        float * pData );
    long WriteTargetV (
        _bstr_t Target,
        long nOS,
        const _variant_t & vData );
    long ReadTarget (
        _bstr_t Target,
        long nOS,
        long nWords,
        float * pData );
    _variant_t ReadTargetV (
        _bstr_t Target,
        long nOS,
        long nWords );
    long GetTargetClass (
        _bstr_t Target );
    HRESULT ZeroTarget (
        _bstr_t Target );
    float GetDeviceSF (
        _bstr_t Target );
    long GetTargetSize (
        _bstr_t Target );
    double GetTargetVal (
        _bstr_t Target );
    long SetTargetVal (
        _bstr_t Target,
        double Val );
    long GetDeviceStatus (
        _bstr_t Target );
    long GetTargetType (
        _bstr_t Target );
    long GetSysMode ( );
    _bstr_t GetDeviceName (
        long Index );
    long GetDeviceType (
        _bstr_t DeviceName );
    _bstr_t GetDeviceRCO (
        _bstr_t DeviceName );
    _bstr_t GetNextTag (
        _bstr_t DeviceName,
        long ReqType,
        long DoFirst );
    long SetSysMode (
        long NewMode );
    HRESULT AboutBox ( );
    long SetTankName (
        _bstr_t TankName );
    _bstr_t GetTankName ( );
    _variant_t ReadTargetVEX (
        _bstr_t Target,
        long nOS,
        long nWords,
        _bstr_t SrcType,
        _bstr_t DstType );
    long WriteTargetVEX (
        _bstr_t Target,
        long nOS,
        _bstr_t DstType,
        const _variant_t & Buf );
};

struct __declspec(uuid("64e8c018-79f7-4c72-9244-6cae7315ba4f"))
_DTDevAccXEvents : IDispatch
{};

struct __declspec(uuid("09efa19d-3ad0-49a8-8232-18d6f7512ce8"))
TDevAccX;
    // [ default ] dispinterface _DTDevAccX
    // [ default, source ] dispinterface _DTDevAccXEvents

//
// Wrapper method implementations
//

#include "c:\users\ecog record\documents\jesse's documents\decoding\nervetask\release\tdevaccx.tli"

} // namespace TDEVACCXLib

#pragma pack(pop)
